rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helpers
    function authed() { return request.auth != null; }
    function isOwnerExisting() { return authed() && resource.data.ownerId == request.auth.uid; }
    function isOwnerNew() { return authed() && request.resource.data.ownerId == request.auth.uid; }

    // Public read-only collection: data (agricultural topics)
    match /data/{docId} {
      allow read: if true;   // anyone can read
      allow write: if false; // no writes
    }

    // User-scoped root collections (tasks, sales, expenses, workers, ...):
    match /{collection}/{docId} {
      allow get, list: if isOwnerExisting();   // read only own docs
      allow create: if isOwnerNew();           // create only with ownerId = uid
      allow update, delete: if isOwnerExisting();
    }

    // Fallback: deny everything else
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
