rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // A list of admin UIDs who have special access
    function getAdminUids() {
      return ['JU2IAJu8XEeCqM33bu1wzlrA7id2'];
    }

    // --- User Profile ---
    match /users/{userId} {
      // Public profile data is readable by anyone
      // Private data (e.g., notes) is only accessible by the owner
      allow read: if true; 
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // --- Topics Collection ---
    match /users/{userId}/topics/{topicId} {
      // Only admins can read topics
      allow read: if request.auth != null && request.auth.uid in getAdminUids();

      // Only the authenticated owner can create/update/delete their own topics
      allow create, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // --- General Farm Data Collections ---
    // (expenses, debts, workers, etc.)
    match /users/{userId}/{collectionId}/{docId} {
        // Users can only access their own data within their own collections
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // --- Notifications Collection (Admin Only) ---
    match /notifications/{notificationId} {
        // Only admins can create notifications
        allow create: if request.auth != null && request.auth.uid in getAdminUids();
        
        // Any authenticated user can read notifications targeted to them or 'all'
        // This is necessary for the notifications popover to work
        allow read: if request.auth != null;
        
        // Users can update (mark as read), but not delete
        allow update: if request.auth != null;
        allow delete: if false; // Prevent deletion by clients
    }
    
    // --- Site Content (Ad Marquee) ---
    match /siteContent/{contentId} {
      // Anyone can read site content like ads
      allow read: if true;
      // Only admins can write/update site content
      allow write: if request.auth != null && request.auth.uid in getAdminUids();
    }
    
    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
