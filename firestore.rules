
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user document
      allow create: if request.auth != null && request.auth.uid == userId;

      // Users can only read or update their own document. Admins can read any document.
      allow read, update: if request.auth.uid == userId || isAdmin(request.auth.uid);
      
      // Users cannot delete their own profile document
      allow delete: if false;

      // Rules for all subcollections under a user document
      match /{subcollection}/{docId} {
        // Users can create, read, update, and delete documents in their own subcollections
        allow read, write: if request.auth.uid == userId;
        
        // Admins can read documents in any user's subcollections
        allow get, list: if isAdmin(request.auth.uid);

        // Recursive match for any nested subcollections (e.g., payments, transactions)
        match /{deeperSubcollection}/{deepDocId=**} {
            allow read, write: if request.auth.uid == userId;
            allow get, list: if isAdmin(request.auth.uid);
        }
      }
    }
  }
}
