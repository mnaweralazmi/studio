rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow reading topics for any authenticated user
    match /topics/{topicId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
      // Allow delete only for the owner or an admin
      allow delete: if request.auth != null && (resource.data.ownerId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
      allow update: if request.auth != null && resource.data.ownerId == request.auth.uid;
    }

    // Users can read/write their own document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Notifications can be read by target user or all users (if target is 'all')
    match /notifications/{notificationId} {
      allow read: if request.auth != null && (resource.data.target == request.auth.uid || resource.data.target == 'all');
      // Admin-only write access
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Rules for user-specific subcollections (expenses, sales, etc.)
    match /users/{userId}/{collectionId}/{docId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }
  }
}
