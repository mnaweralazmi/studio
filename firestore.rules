rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/siteContent/admins).data.uids;
    }

    // Rules for user-specific data
    match /users/{userId}/{document=**} {
      allow read, write: if isSignedIn() && isOwner(userId);
    }
    
    // Rules for publicly readable topics
    match /publicTopics/{topicId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }
    
    // Rules for site-wide content (e.g., ads)
    match /siteContent/{docId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // Rules for notifications
    match /notifications/{notificationId} {
      allow create: if isAdmin();
      allow read: if isSignedIn() && 
                   (resource.data.target == 'all' || resource.data.target == request.auth.uid || (isAdmin() && resource.data.target == 'admin'));
      allow update: if isSignedIn(); // Allow users to mark as read
    }
  }
}
