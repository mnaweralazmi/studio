rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check ownership
    function isOwner(data) {
      return request.auth != null && request.auth.uid == data.ownerId;
    }
    
    // Users can only read their own user document and admins can read any.
    match /users/{userId} {
      allow read, update, write: if request.auth.uid == userId;
    }

    // Agricultural topics data is public
    match /data/{document=**} {
      allow read: if true;
    }
    
    // Generic rules for all financial collections
    match /{departmentId}_sales/{docId} {
      allow read, write: if isOwner(resource.data);
      allow create: if isOwner(request.resource.data);
    }
    match /{departmentId}_expenses/{docId} {
      allow read, write: if isOwner(resource.data);
      allow create: if isOwner(request.resource.data);
    }
    match /{departmentId}_debts/{docId} {
      allow read, write: if isOwner(resource.data);
      allow create: if isOwner(request.resource.data);
    }
    match /{departmentId}_workers/{docId} {
      allow read, write: if isOwner(resource.data);
      allow create: if isOwner(request.resource.data);
    }

    // Rules for all archive collections
    match /archive_sales/{docId} {
      allow read, write: if isOwner(resource.data);
      allow create: if isOwner(request.resource.data);
    }
     match /archive_expenses/{docId} {
      allow read, write: if isOwner(resource.data);
      allow create: if isOwner(request.resource.data);
    }
     match /archive_debts/{docId} {
      allow read, write: if isOwner(resource.data);
      allow create: if isOwner(request.resource.data);
    }

    // Rules for tasks
    match /tasks/{docId} {
       allow read, write: if isOwner(resource.data);
       allow create: if isOwner(request.resource.data);
    }
    
    match /completed_tasks/{docId} {
       allow read, write: if isOwner(resource.data);
       allow create: if isOwner(request.resource.data);
    }
  }
}
