rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin by checking against a hardcoded list of UIDs
    function isAdmin() {
      // The admin UIDs must be hardcoded here because security rules cannot access app code.
      return request.auth.uid in ['JU2IAJu8XEeCqM33bu1wzlrA7id2'];
    }

    // Users can generally read/write their own data. Admins have full access.
    match /users/{userId}/{document=**} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }
    
    // Topics: Public topics are readable by anyone. Users can write to their own topics. Admins can write anywhere.
    match /{path=**}/topics/{topicId} {
      allow read: if resource.data.isPublic == true || 
                   (request.auth != null && (request.auth.uid == resource.data.userId || isAdmin()));
      allow create, update, delete: if request.auth != null && (request.auth.uid == resource.data.userId || isAdmin());
    }

    // Notifications: Admins can create them, and authenticated users can read them if targeted.
    match /notifications/{notificationId} {
      allow create: if isAdmin();
      allow read: if request.auth != null && 
                   (resource.data.target == 'all' || resource.data.target == request.auth.uid);
    }
  }
}
