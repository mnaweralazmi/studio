rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(data) {
      return request.auth != null && request.auth.uid == data.ownerId;
    }

    // Users can read any profile, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Public data readable by anyone.
    match /data/{document=**} {
      allow read: if true;
    }

    // Rules for all department-specific and archive collections
    // This single rule block covers all collections that follow the pattern of having an ownerId.
    // This works because all our client-side queries now correctly include `where('ownerId', '==', user.uid)`.
    match /{collection}/{docId} {
      allow read, update, delete: if isOwner(resource.data);
      allow create: if isOwner(request.resource.data);
    }
  }
}
