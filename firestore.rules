rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Utility Function: Is the user authenticated? ---
    function isSignedIn() {
      return request.auth != null;
    }
    
    // --- Utility Function: Does the incoming data's ownerId match the user's UID? ---
    function isOwner(docData) {
      return isSignedIn() && request.auth.uid == docData.ownerId;
    }
    
    // --- Utility Function: Does the existing resource's ownerId match the user's UID? ---
    function isExistingOwner(resource) {
        return isSignedIn() && request.auth.uid == resource.data.ownerId;
    }

    // --- Users Collection Rules ---
    // Users can read their own data and update their own data.
    // No one can create or delete user profiles directly through client-side requests.
    match /users/{userId} {
      allow read, update: if isSignedIn() && request.auth.uid == userId;
    }

    // --- Data (Topics) Collection Rules ---
    // Anyone can read agricultural topics. Only admins can write.
    match /data/{docId} {
        allow read: true;
        allow write: if false; // To be managed from a secure backend if needed
    }

    // --- Dynamic Rules for Departmental and Archive Data ---
    // This single rule covers all financial and archive collections.
    // It works for collections like: agriculture_sales, livestock_expenses, archive_debts, etc.
    match /{collectionId}/{docId} {
      // 1. A user can read or delete a document if they are the owner.
      allow read, delete: if isExistingOwner(resource);

      // 2. A user can create a document if they are signed in and the new document's ownerId is their own UID.
      allow create: if isOwner(request.resource.data);

      // 3. A user can update a document if they are the owner, and they cannot change the ownerId.
      allow update: if isExistingOwner(resource) && isOwner(request.resource.data);
    }
  }
}
