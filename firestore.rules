rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }
    function isAdmin() {
      // Check if user is authenticated and their UID is in the admin list
      return isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/siteContent/adminConfig).data.adminUids;
    }

    // ----------------- Public Topics (Home Page) -----------------
    match /publicTopics/{topicId} {
      // Any signed-in user can read public topics
      allow read: if isSignedIn();
      
      // Only admins can create, update, or delete public topics
      allow create, update, delete: if isAdmin();
    }

    // ----------------- Site Content (Ads, etc.) -----------------
    match /siteContent/{contentId} {
        // Allow anyone to read site content like ads or admin lists
        allow read: if true;
        // Only admins can write to site content
        allow write: if isAdmin();
    }
    
    // ----------------- User-specific Data -----------------
    match /users/{userId}/{document=**} {
      // User can read/write their own data
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }
    
     match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      allow write: if isSignedIn() && request.auth.uid == userId;
    }

    // ----------------- Notifications -----------------
    match /notifications/{notificationId} {
        // Admins can create notifications
        allow create: if isAdmin();
        // Users can read notifications targeted to them, 'all', or 'admin' if they are an admin
        allow read: if isSignedIn() && 
                    (resource.data.target == request.auth.uid || resource.data.target == 'all' || (isAdmin() && resource.data.target == 'admin'));
        // Users can update their own notifications (e.g., mark as read)
        allow update: if isSignedIn() && resource.data.target == request.auth.uid;
    }
  }
}
