rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if user is an admin
    function isAdmin() {
      // Admins can be checked by their UID or by a role in their user document
      return request.auth.uid == 'l8M3vFpBqNg0dKda2RxmjcizOjg2' || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user document
      allow create: if request.auth.uid == userId;

      // Only the user themselves or an admin can read their data
      allow read: if request.auth.uid == userId || isAdmin();

      // Only the user themselves can update their data
      allow update: if request.auth.uid == userId;
      
      // A user should not be able to delete their own account from the client
      allow delete: if false;

      // Rules for all subcollections within a user document (e.g., debts, expenses, sales, workers)
      match /{subcollection}/{docId} {
        // The user themselves or an admin can create, read, update, and delete documents in subcollections
        allow read, write: if request.auth.uid == userId || isAdmin();
        
        // Rules for nested subcollections (e.g., payments in debts, transactions in workers)
        match /{nestedSubcollection}/{nestedDocId} {
           allow read, write: if request.auth.uid == userId || isAdmin();
        }
      }
    }
  }
}
