
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read and write to their own user document.
    match /users/{userId} {
      allow read, update, create: if request.auth.uid == userId;
    }
    
    // Public data readable by anyone.
    match /data/{document=**} {
      allow read: if true;
    }
    
    // Function to check if the user owns a document.
    function isOwner() {
      return request.auth != null && request.auth.uid == resource.data.ownerId;
    }
    
    function isCreatingOwner() {
       return request.auth != null && request.auth.uid == request.resource.data.ownerId;
    }

    // --- Application Data Rules ---

    // Tasks collections
    match /tasks/{docId} {
      allow read, write: if isOwner();
      allow create: if isCreatingOwner();
    }
    match /completed_tasks/{docId} {
       allow read, write: if isOwner();
       allow create: if isCreatingOwner();
    }

    // Financial collections (sales, expenses, debts, workers) for all departments
    match /{department}_sales/{docId} {
      allow read, write: if isOwner();
      allow create: if isCreatingOwner();
    }
    match /{department}_expenses/{docId} {
      allow read, write: if isOwner();
      allow create: if isCreatingOwner();
    }
    match /{department}_debts/{docId} {
      allow read, write: if isOwner();
      allow create: if isCreatingOwner();
    }
    match /{department}_workers/{docId} {
      allow read, write: if isOwner();
      allow create: if isCreatingOwner();
    }

    // Archive collections
    match /archive_sales/{docId} {
      allow read, write: if isOwner();
      allow create: if isCreatingOwner();
    }
    match /archive_expenses/{docId} {
      allow read, write: if isOwner();
      allow create: if isCreatingOwner();
    }
    match /archive_debts/{docId} {
      allow read, write: if isOwner();
      allow create: if isCreatingOwner();
    }
  }
}
