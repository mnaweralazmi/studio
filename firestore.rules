rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Allow reading public topics for any authenticated user.
    match /publicTopics/{topicId} {
      allow read: if request.auth != null;
      allow write, delete: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/siteContent/adminConfig).data.adminUids;
    }
    
    // Allow admins to manage site content like ads.
    match /siteContent/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/siteContent/adminConfig).data.adminUids;
    }

    // Allow admins to write notifications.
    match /notifications/{notificationId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/siteContent/adminConfig).data.adminUids;
    }

    // Secure user-specific data.
    match /users/{userId} {
      // Allow a user to read and write their own user document.
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Allow a user to read all documents and collections nested under their user document.
      // This is crucial for fetching tasks, sales, expenses, etc.
      match /{document=**} {
        allow read: if request.auth != null && request.auth.uid == userId;
      }

      // Allow write access only for admins or the user themselves on their own subcollections.
      match /{subcollection}/{docId} {
         allow write, delete, create: if request.auth != null && (request.auth.uid == userId || request.auth.uid in get(/databases/$(database)/documents/siteContent/adminConfig).data.adminUids);
      }
    }
  }
}
