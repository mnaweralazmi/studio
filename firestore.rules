rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // USERS: Users can read/update their own profile.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
    }

    // DATA: Public agricultural topics can be read by anyone.
    match /data/{docId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    // --- Helper function for secure access ---
    function isOwner(collectionName) {
      return request.auth != null && request.auth.uid == resource.data.ownerId;
    }

    function isCreatingOwnContent() {
      return request.auth != null && request.auth.uid == request.resource.data.ownerId;
    }
    
    // --- All department-specific and archive collections ---
    // This single rule applies to all collections that follow the pattern of having an ownerId.
    match /{path=**}/{document} {
      allow read, write: if isOwner(path);
      allow create: if isCreatingOwnContent();
    }
  }
}
