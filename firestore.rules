
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Admins can read/write anything
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Users can read their own user document
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
    }
    
    // Users can read public data
    match /data/{docId} {
        allow read: if true;
    }
    
    // --- Application-specific rules ---
    function isOwner(doc) {
      return request.auth.uid == doc.data.ownerId;
    }

    function isCreatingOwn(doc) {
      return request.auth.uid == doc.data.ownerId;
    }

    // All financial collections and tasks follow the same ownership pattern
    match /agriculture_sales/{docId} { allow read, write: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    match /agriculture_expenses/{docId} { allow read, write: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    match /agriculture_debts/{docId} { allow read, write: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    match /agriculture_workers/{docId} { allow read, write: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    
    match /livestock_sales/{docId} { allow read, write: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    match /livestock_expenses/{docId} { allow read, write: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    match /livestock_debts/{docId} { allow read, write: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    match /livestock_workers/{docId} { allow read, write: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    
    match /poultry_sales/{docId} { allow read, write: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    match /poultry_expenses/{docId} { allow read, write: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    match /poultry_debts/{docId} { allow read, write: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    match /poultry_workers/{docId} { allow read, write: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    
    match /fish_sales/{docId} { allow read, write: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    match /fish_expenses/{docId} { allow read, write: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    match /fish_debts/{docId} { allow read, write: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    match /fish_workers/{docId} { allow read, write: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }

    match /tasks/{docId} { allow read, write: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    
    match /archive_sales/{docId} { allow read: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    match /archive_expenses/{docId} { allow read: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    match /archive_debts/{docId} { allow read: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    match /completed_tasks/{docId} { allow read: if isOwner(resource); allow create: if isCreatingOwn(request.resource); }
    
  }
}
