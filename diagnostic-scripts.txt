
// diagnostic.js — شغّله في Console داخل صفحتك بعد تسجيل الدخول
(async () => {
  try {
    // استيراد الدوال المطلوبة ديناميكيًا لتكون متاحة في الـ Console
    const { getFirestore, collectionGroup, query, where, orderBy, limit, getDocs, doc, getDoc, serverTimestamp, collection, updateDoc } = await import('https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore.js');
    const { getAuth } = await import('https://www.gstatic.com/firebasejs/10.12.2/firebase-auth.js');
    const { initializeApp, getApps } = await import('https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js');

    // افترض أن لديك كائن firebaseConfig في النطاق العام، أو قم بتعريفه هنا
    // ملاحظة: هذا الكود لن يعمل إلا إذا كان firebaseConfig مُعرفًا
    const app = getApps()[0]; // الحصول على التطبيق المهيأ بالفعل
    if (!app) {
        console.error("Firebase app is not initialized. Cannot proceed.");
        return;
    }
    const db = getFirestore(app);
    const auth = getAuth(app);
    
    console.log('auth.currentUser =', auth.currentUser);
    const uid = auth.currentUser?.uid || null;
    console.log('uid:', uid);

    // اختبر collectionGroup العام
    try {
      console.log('Testing collectionGroup query...');
      const q = query(collectionGroup(db, 'topics'), where('isPublic','==', true), orderBy('createdAt','desc'), limit(20));
      const snap = await getDocs(q);
      console.log('✅ collectionGroup query successful. Size:', snap.size);
      console.table(snap.docs.map(d=>({id:d.id, ...d.data()})));
    } catch(e) {
      console.error('❌ collectionGroup query failed:', e);
      if (e?.message) console.error('Error message:', e.message);
    }

    // اختبر قراءة أول مستند تحت المستخدم الحالي (لو مسجّل)
    if (uid) {
      try {
        console.log(`Testing direct read for user ${uid}...`);
        const q2 = query(collection(db,'users', uid, 'topics'), limit(1));
        const s = await getDocs(q2);
        if (s.size) {
          const d = s.docs[0];
          console.log('✅ Found a sample topic for the current user:', d.id, d.data());
          const dd = await getDoc(doc(db,'users',uid,'topics', d.id));
          console.log('✅ Direct getDoc successful:', dd.exists() ? dd.data() : 'missing');
        } else console.log('ℹ️ No topics found under current user.');
      } catch(err){ console.error('❌ Error reading user-specific topics:', err); }
    } else {
        console.log("ℹ️ User not logged in, skipping user-specific tests.");
    }
  } catch(err){ console.error('CRITICAL: Diagnostic script unexpected error', err); }
})();


// update-my-topics.js (اختياري — شغله فقط إن موافق)
// يجعل كل مواضيع المستخدم الحالي عامة ويضيف createdAt إن مفقود
(async () => {
    // استيراد الدوال المطلوبة ديناميكيًا
    const { getFirestore, collection, query, getDocs, updateDoc, serverTimestamp } = await import('https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore.js');
    const { getAuth } = await import('https://www.gstatic.com/firebasejs/10.12.2/firebase-auth.js');
    const { getApps } = await import('https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js');
    
    const app = getApps()[0];
     if (!app) {
        console.error("Firebase app is not initialized.");
        return;
    }
    const db = getFirestore(app);
    const auth = getAuth(app);
    
  const user = auth.currentUser;
  if (!user) return console.error('User not signed in. Please sign in and try again.');

  console.log(`Updating topics for user: ${user.uid}...`);
  const q = query(collection(db, 'users', user.uid, 'topics'));
  const s = await getDocs(q);

  if (s.empty) {
      console.log("No topics found for this user. Nothing to update.");
      return;
  }
  
  let updatesCount = 0;
  for (const docSnap of s.docs) {
    const data = docSnap.data();
    const updates = {};
    if (data.isPublic !== true) {
        updates.isPublic = true;
    }
    if (!data.createdAt) {
        updates.createdAt = serverTimestamp();
    }
    if (Object.keys(updates).length > 0) {
      await updateDoc(doc(db, 'users', user.uid, 'topics', docSnap.id), updates);
      console.log('Updated doc:', docSnap.id, 'with', updates);
      updatesCount++;
    } else {
      console.log('No update needed for doc:', docSnap.id);
    }
  }
  console.log(`Done. Total documents updated: ${updatesCount}`);
})();


// fix-index.txt — تعليمات
// إذا ظهر في الخطأ "create an index" أو رابط في رسالة الخطأ: افتح الرابط واضغط Create.
// أو من Firebase Console → Firestore → Indexes → Add index:
// Collection group: topics
// Fields: isPublic (Ascending), createdAt (Descending)
// ثم Create وانتظر بناء الـ index.

